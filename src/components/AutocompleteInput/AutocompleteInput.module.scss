@import "../../UIKit/variables";

.wrapper {
  position: relative;
  &:hover .primaryLabel:not(.disabled):not(.error) {
    color: $black;
  }
}

.input {
  border: none;
  box-sizing: border-box;
  background-color: transparent;
  font-size: 16px;
  padding: 0.5em;
  padding-right: 0.2em;
  line-height: 1.5;
  color: $black;
  width: 100%;
  height: 40px;
  min-width: 184px;
  &::placeholder {
    color: $black;
  }
  &:focus {
    outline: none;
  }
  &[type="number"]::-webkit-inner-spin-button,
  &[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
  }
}

.search {
  position: relative;
  margin-left: 5px;

  /* clicking anywhere will focus the input */
  cursor: text;
  display: inline-block;
  /* prevent autoresize overflowing the container */
  max-width: 100%;

  &.is-focused {
    border-color: #b1b1b1;
  }

  @media screen and (min-width: 30em) {
    /* this will become the offsetParent for suggestions */
    position: relative;
  }
}

.searchSelected {
  display: inline-block;
}

.selectedTag {
  display: inline-block;
  box-sizing: border-box;
  border: 1px solid $menuItemHover;
  border-radius: 2px;
  height: 24px;
  background: $menuItemHover;

  .tagName {
    font-size: 14px;
  }

  &:nth-child(2n) {
    margin-left: 5px;
  }

  /* match the font styles */
  font-size: inherit;
  line-height: inherit;

  &:after {
    content: "\2715";
    color: #aaa;
    margin-left: 8px;
  }

  &:hover,
  &:focus {
    border-color: #b1b1b1;
  }
}

.searchInput {
  input {
    /* prevent autoresize overflowing the container */
    max-width: 184px;
    background-color: transparent;
    /* remove styles and layout from this element */
    margin: 0;
    padding: 0;
    border: 0;
    outline: none;
    &:focus {
      outline: none;
    }
    &::-ms-clear {
      display: none;
    }
  }
}

.suggestionActive {
  background: $itemHover;
}

.suggestions {
  position: absolute;
  top: 100%;
  left: -30px;
  //   width: 150px;
  z-index: 2;

  //@media screen and (min-width: 30em) {
  //  width: 240px;
  //}

  ul {
    margin: 4px 15px;
    padding: 0;
    list-style: none;
    background: white;
    border: 1px solid $textBlue;
    border-radius: 2px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    line-height: 10px;
  }

  li {
    border-bottom: 1px solid #ddd;
    padding: 6px 7px;
    height: 24px;
    font-size: 14px;
    color: #000;
    &:hover {
      cursor: pointer;
      background: #eee;
    }
    &.is-active {
      background: #b7cfe0;
    }
    &.is-disabled {
      opacity: 0.5;
      cursor: auto;
    }
  }

  li mark {
    background: none;
    // font-weight: 600;
  }
}

.darkLabel {
  color: $black;
  font-size: 14px;

  display: block;
  margin-bottom: 8px;
}
.primaryLabel {
  color: $black;
  display: block;
  margin-bottom: 0.4em;

  &Focus {
    color: $black;
  }
}

.bordered {
  border-radius: 4px;
  border: 1px solid $textGrey;
  background-color: #fff;
  &:hover {
    border-color: $defaultGrey;
  }
  &:focus {
    border-color: $defaultGrey;
  }
  &:disabled {
    color: $black;
    border-color: $black;
  }
  &Error {
    border-color: $black;
    background-color: $black;
    &:focus,
    &:hover {
      border-color: $black;
    }
  }
  &Small {
    padding: 0.2em 0.5em;
  }
}
.underline {
  border-radius: 0;
  font-weight: bold;
  border-bottom: 1px solid $black;
  &:hover {
    border-color: $black;
  }
  &:focus {
    border-color: $black;
  }
  &:disabled {
    color: $black;
    border-color: $black;
    &::placeholder {
      color: $black;
    }
  }
  &Error {
    border-color: $black;
    &:focus,
    &:hover {
      border-color: $black;
    }
  }
}

.withIcon {
  padding-left: 2.3em;
  height: 100%;

  &:hover + .icon svg path {
    fill: $black;
  }
  &:focus + .icon svg path {
    fill: $black;
  }
  &:disabled + .icon svg path {
    fill: $black;
  }
  &Error:hover + .icon svg path,
  &Error:focus + .icon svg path,
  &Error + .icon svg path {
    fill: $black;
  }
}

.icon {
  position: absolute;
  left: 0.5em;
  top: 55%;
  transform: translateY(-50%);

  svg {
    path {
      fill: $black;
    }
  }
}

.disabled {
  color: $black;
  &:hover {
    color: $black;
  }
}
.error {
  color: $black;

  &Text {
    color: $black;
    position: absolute;
    display: block;
    left: 0;
    top: 3.8em;
  }
}
